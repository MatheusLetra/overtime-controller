unit UDMDados;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.VCLUI.Wait,
  FireDAC.Stan.ExprFuncs, FireDAC.Phys.SQLiteDef, FireDAC.Phys.SQLite, Data.DB,
  FireDAC.Comp.Client;

type
  TDataModule1 = class(TDataModule)
    FDConnection1: TFDConnection;
    FDPhysSQLiteDriverLink1: TFDPhysSQLiteDriverLink;
    procedure DataModuleCreate(Sender: TObject);
    procedure FDConnection1AfterConnect(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  DataModule1: TDataModule1;

implementation

{%CLASSGROUP 'Vcl.Controls.TControl'}

{$R *.dfm}

procedure TDataModule1.DataModuleCreate(Sender: TObject);
begin
  FDConnection1.Params.Database := 'AGENDA.DB';
  FDConnection1.DriverName := 'SQLite';

  FDConnection1.Connected := True;
end;

procedure TDataModule1.FDConnection1AfterConnect(Sender: TObject);
begin
  FDConnection1.ExecSQL(' CREATE TABLE IF NOT EXISTS FUNCIONARIOS ( ' +
    ' CODIGO INTEGER PRIMARY KEY AUTOINCREMENT,' +
    ' NOME VARCHAR(50) )'
  );

   FDConnection1.ExecSQL(' CREATE TABLE IF NOT EXISTS HORAS_EXTRAS ( ' +
    ' CODIGO INTEGER PRIMARY KEY AUTOINCREMENT,' +
    ' COD_FUNCIONARIO INTEGER, ' +
    ' INICIAL TIMESTAMP, ' +
    ' FINAL TIMESTAMP, ' +
    ' FOREIGN KEY (COD_FUNCIONARIO) REFERENCES FUNCIONARIOS(CODIGO) )'
  );
end;

end.
